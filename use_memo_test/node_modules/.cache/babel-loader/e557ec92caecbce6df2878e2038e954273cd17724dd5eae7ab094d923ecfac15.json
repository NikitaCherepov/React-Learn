{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hours\\\\Desktop\\\\React Learn\\\\use_memo_test\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    // Этот код выполнится после рендера компонента (последовательности монтирования или обновления)\n    document.title = `You clicked ${count} times`;\n\n    // Возвращение функции «очистки», которая выполнится перед размонтированием компонента\n    return () => {\n      document.title = 'React App';\n    };\n  }, [count]); // Массив зависимостей, компонент перерендерится только, если `count` изменится\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","count","setCount","document","title","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hours/Desktop/React Learn/use_memo_test/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Этот код выполнится после рендера компонента (последовательности монтирования или обновления)\r\n    document.title = `You clicked ${count} times`;\r\n\r\n    // Возвращение функции «очистки», которая выполнится перед размонтированием компонента\r\n    return () => {\r\n      document.title = 'React App';\r\n    };\r\n  }, [count]); // Массив зависимостей, компонент перерендерится только, если `count` изменится\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACd;IACAO,QAAQ,CAACC,KAAK,GAAG,eAAeH,KAAK,QAAQ;;IAE7C;IACA,OAAO,MAAM;MACXE,QAAQ,CAACC,KAAK,GAAG,WAAW;IAC9B,CAAC;EACH,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,oBACEH,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,GAAG,cAAY,EAACJ,KAAK,EAAC,QAAM;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChCX,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAI,QAAA,EAAC;IAE5C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACT,EAAA,CArBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAuBZ,eAAeA,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}